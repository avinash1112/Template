worker_processes auto;
worker_rlimit_nofile 65536;
pid /tmp/nginx.pid;

events {
  worker_connections 4096;
}

http {
  # MIME / defaults
  include       mime.types;
  default_type  application/octet-stream;
  types_hash_max_size 4096;
  charset       utf-8;

  # I/O
  sendfile    on;
  tcp_nodelay on;
  tcp_nopush  on;

  # Conditional requests
  etag                on;
  if_modified_since   exact;

  # Gzip – safe set
  gzip              on;
  gzip_vary         on;
  gzip_comp_level   5;
  gzip_min_length   1024;
  gzip_proxied      any;
  gzip_types
    text/plain text/css application/json application/javascript
    text/xml application/xml application/xml+rss image/svg+xml
    application/font-woff application/font-woff2 font/ttf font/opentype;

  # Large headers
  large_client_header_buffers 8 16k;

  # Timeouts
  client_header_timeout 15s;
  send_timeout          65s;
  keepalive_timeout     65s;

  # Limits
  client_body_buffer_size 256k;
  client_max_body_size    64m;

  # Temp paths (writable)
  client_body_temp_path /tmp/client_temp;
  proxy_temp_path       /tmp/proxy_temp;

  # Logs to stdout/stderr
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /dev/stdout main;
  error_log  /dev/stderr warn;

  # Hide Nginx version
  server_tokens off;


  server {
    listen 80;
    listen [::]:80;
    server_name _;

    root  /var/www/html;
    index index.html;

    # Security headers (safe defaults)
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Don’t list directories
    autoindex off;

    # Symlink safety
    disable_symlinks if_not_owner from=/var/www/html;

    # Health probes
    location __NGINX_CONFIG_PING_PATH__ {
      access_log off;
      add_header Content-Type text/plain;
      return 200 'OK';
    }
    location __NGINX_CONFIG_STUB_STATUS_PATH__ {
      stub_status;
      allow 127.0.0.1;
      allow ::1;
      deny all;
    }

    # Block hidden files and sensitive stuff
    location ~ /\.(?!well-known) { deny all; }

    # 1) Hashed JS/CSS emitted by Vite (filename.[hash].ext) → long, immutable cache
    location ~* ^/assets/.+\.[0-9a-f]{8,}\.(?:js|mjs|css)$ {
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
      try_files $uri =404;
    }

    # 2) Fonts / images / media → medium cache
    location ~* \.(?:png|jpe?g|gif|webp|avif|ico|svg|woff2?|ttf|eot)$ {
      access_log off;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
      try_files $uri =404;
    }

    # 3) Service worker & manifest must update promptly
    location = /service-worker.js {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      expires -1;
      try_files $uri =404;
    }
    location = /manifest.webmanifest {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      expires -1;
      try_files $uri =404;
    }

    # 4) HTML (including index.html) → no-cache
    location ~* \.html$ {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      expires -1;
      try_files $uri =404;
    }

    # Real files (assets) 404 correctly; unknown paths fall back to index.html
    location / {
      try_files $uri $uri/ /index.html;
    }

    # Methods: static sites typically only need GET/HEAD/OPTIONS
    if ($request_method !~ ^(GET|HEAD|OPTIONS)$) { return 405; }
  }
}
